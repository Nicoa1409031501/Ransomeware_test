{
  "id":"chatcmpl-8Mchwvw3RE2eOR5IOSLLEY331Mwwr",
  "object":"chat.completion",
  "created":1700402700,
  "model":"gpt-3.5-turbo-0613",
  "choices":[
    {
      "index":0,
      "message":{
        "role":"assistant",
        "content":"[可實現]\n\n1. 使用套件：boto3、google-cloud-sdk\n   使用功能：創建、刪除、修改虛擬機器(Virtual Machine)或云實例(Cloud Instance)\n\n```python\n# 使用boto3套件\nimport boto3\n\n# 創建虛擬機器\ndef createInstance(instance_name, image_id, instance_type, key_name, security_group_id):\n    ec2 = boto3.resource('ec2')\n    instance = ec2.create_instances(\n        ImageId=image_id,\n        InstanceType=instance_type,\n        KeyName=key_name,\n        SecurityGroupIds=[security_group_id],\n        MinCount=1,\n        MaxCount=1\n    )\n    print(\"Instance created:\", instance[0].id)\n\n# 刪除虛擬機器\ndef deleteInstance(instance_id):\n    ec2 = boto3.resource('ec2')\n    instance = ec2.Instance(instance_id)\n    instance.terminate()\n    print(\"Instance deleted:\", instance_id)\n\n# 修改虛擬機器配置\ndef modifyInstance(instance_id, instance_type):\n    ec2 = boto3.resource('ec2')\n    instance = ec2.Instance(instance_id)\n    instance.stop()\n    instance.modify_attribute(InstanceType={'Value': instance_type})\n    instance.start()\n    print(\"Instance modified:\", instance_id)\n\n# 使用google-cloud-sdk套件\nfrom google.cloud import compute_v1\n\n# 創建云實例\ndef createCloudInstance(project_id, zone, instance_name, machine_type, disk_size, image_project, image_family):\n    compute_client = compute_v1.InstancesClient()\n    project = f\"projects/{project_id}\"\n    zone = f\"zones/{zone}\"\n    instance_name = f\"{project}/instances/{instance_name}\"\n\n    config = {\n        'name': instance_name,\n        'machine_type': f\"{project}/machineTypes/{machine_type}\",\n        'disks': [\n            {\n                'boot': True,\n                'auto_delete': True,\n                'initialize_params': {\n                    'source_image_family': image_family,\n                    'source_image_project': image_project,\n                    'disk_size_gb': disk_size,\n                },\n            }\n        ],\n        'network_interfaces': [\n            {\n                'network': f\"{project}/networks/default\",\n            }\n        ],\n    }\n\n    instance = compute_client.insert(project=project, zone=zone, instance_resource=config)\n    print(\"Instance created:\", instance.name)\n\n# 刪除云實例\ndef deleteCloudInstance(project_id, zone, instance_name):\n    compute_client = compute_v1.InstancesClient()\n    project = f\"projects/{project_id}\"\n    zone = f\"zones/{zone}\"\n    instance_name = f\"{project}/instances/{instance_name}\"\n\n    compute_client.delete(project=project, zone=zone, instance=instance_name)\n    print(\"Instance deleted:\", instance_name)\n\n# 修改云實例配置\ndef modifyCloudInstance(project_id, zone, instance_name, machine_type):\n    compute_client = compute_v1.InstancesClient()\n    project = f\"projects/{project_id}\"\n    zone = f\"zones/{zone}\"\n    instance_name = f\"{project}/instances/{instance_name}\"\n\n    instance = compute_client.get(project=project, zone=zone, instance=instance_name)\n    instance.machine_type = f\"{project}/machineTypes/{machine_type}\"\n    update_mask = {\n        'paths': ['machine_type']\n    }\n    operation = compute_client.update(project=project, zone=zone, instance=instance_name, instance_resource=instance, update_mask=update_mask)\n\n    print(\"Instance modified:\", instance.name)\n```\n\n2. 使用套件：aws-cli、gcloud\n   使用功能：同上\n\n```python\n# 使用aws-cli\nimport subprocess\n\n# 創建虛擬機器\ndef createInstance(instance_name, image_id, instance_type, key_name, security_group_id):\n    subprocess.run(['aws', 'ec2', 'run-instances',\n                    '--image-id', image_id,\n                    '--instance-type', instance_type,\n                    '--key-name', key_name,\n                    '--security-group-ids', security_group_id,\n                    '--tag-specifications', 'ResourceType=instance,Tags=[{Key=Name,Value='+instance_name+'}]']\n    )\n    print(\"Instance created\")\n\n# 刪除虛擬機器\ndef deleteInstance(instance_id):\n    subprocess.run(['aws', 'ec2', 'terminate-instances', '--instance-ids', instance_id])\n    print(\"Instance deleted\")\n\n# 修改虛擬機器配置\ndef modifyInstance(instance_id, instance_type):\n    subprocess.run(['aws', 'ec2', 'stop-instances', '--instance-ids', instance_id])\n    subprocess.run(['aws', 'ec2', 'modify-instance-attribute',\n                    '--instance-id', instance_id,\n                    '--instance-type', instance_type]\n    )\n    subprocess.run(['aws', 'ec2', 'start-instances', '--instance-ids', instance_id])\n    print(\"Instance modified\")\n\n# 使用gcloud\n# 創建云實例\ndef createCloudInstance(project, zone, instance_name, machine_type, disk_size, image_project, image_family):\n    subprocess.run(['gcloud', 'compute', 'instances', 'create', instance_name,\n                    '--project', project,\n                    '--image-family', image_family, \n                    '--image-project', image_project, \n                    '--boot-disk-size', disk_size, \n                    '--machine-type', machine_type,\n                    '--zone', zone]\n    )\n    print(\"Instance created\")\n\n# 刪除云實例\ndef deleteCloudInstance(project, zone, instance_name):\n    subprocess.run(['gcloud', 'compute', 'instances', 'delete', instance_name,\n                    '--project', project, \n                    '--zone', zone, \n                    '--quiet']\n    )\n    print(\"Instance deleted\")\n\n# 修改云實例配置\ndef modifyCloudInstance(project, zone, instance_name, machine_type):\n    subprocess.run(['gcloud', 'compute', 'instances', 'stop', instance_name,\n                    '--project', project, \n                    '--zone', zone]\n    )\n    subprocess.run(['gcloud', 'compute', 'instances', 'set-machine-type', instance_name,\n                    '--project', project, \n                    '--machine-type', machine_type, \n                    '--zone', zone]\n    )\n    subprocess.run(['gcloud', 'compute', 'instances', 'start', instance_name,\n                    '--project', project, \n                    '--zone', zone]\n    )\n    print(\"Instance modified\")\n```\n\n3. 使用套件：libcloud\n   使用功能：創建、刪除、修改虛擬機器(Virtual Machine)或云實例(Cloud Instance)\n\n```python\nfrom libcloud.compute.types import Provider\nfrom libcloud.compute.providers import get_driver\n\n# 創建虛擬機器\ndef createCloudInstance(provider_name, access_id, secret_key, instance_name, image_id, size, location):\n    driver = get_driver(Provider(provider_name))\n    conn = driver(access_id, secret_key)\n\n    images = conn.list_images()\n    sizes = conn.list_sizes()\n\n    image = [img for img in images if img.id == image_id][0]\n    size = [siz for siz in sizes if siz.id == size][0]\n\n    node = conn.create_node(name=instance_name, image=image, size=size, location=location)\n    print(\"Instance created:\", node.name)\n\n# 刪除虛擬機器\ndef deleteCloudInstance(provider_name, access_id, secret_key, instance_id):\n    driver = get_driver(Provider(provider_name))\n    conn = driver(access_id, secret_key)\n\n    nodes = conn.list_nodes()\n    node = [nd for nd in nodes if nd.id == instance_id][0]\n\n    conn.destroy_node(node)\n    print(\"Instance deleted:\", instance_id)\n\n# 修改虛擬機器配置\ndef modifyCloudInstance(provider_name, access_id, secret_key, instance_id, size):\n    driver = get_driver(Provider(provider_name))\n    conn = driver(access_id, secret_key)\n\n    sizes = conn.list_sizes()\n    size = [siz for siz in sizes if siz.id == size][0]\n\n    nodes = conn.list_nodes()\n    node = [nd for nd in nodes if nd.id == instance_id][0]\n\n    conn.ex_resize_instance(node, size)\n    print(\"Instance modified:\", instance_id)\n```"
      },
      "finish_reason":"stop"
    }
  ],
  "usage":{
    "prompt_tokens":998,
    "completion_tokens":1833,
    "total_tokens":2831
  }
}