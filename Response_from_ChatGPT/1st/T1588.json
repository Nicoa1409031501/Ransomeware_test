{
  "id":"chatcmpl-8MZWuB77pCwulyLWz1kp2Tr04gdkD",
  "object":"chat.completion",
  "created":1700390484,
  "model":"gpt-3.5-turbo-0613",
  "choices":[
    {
      "index":0,
      "message":{
        "role":"assistant",
        "content":"[可實現]\n\n使用的套件：\n- BeautifulSoup\n- requests\n\n程式碼：\n\n```python\n# 方法一\nimport requests\nfrom bs4 import BeautifulSoup\n\ndef obtain_capabilities():\n    capabilities = []\n\n    # 爬取T1588的資訊\n    url = \"https://attack.mitre.org/techniques/T1588/\"\n    response = requests.get(url)\n    soup = BeautifulSoup(response.text, \"html.parser\")\n    technique_description = soup.select_one(\"#v-defense div div:nth-child(2) div div:nth-child(2)\").text.strip()\n    capability_list = technique_description.split(\"，\")[:-1]\n\n    # 取得每種capability的描述\n    for capability in capability_list:\n        capability_name = capability.split(\"是\")[1].strip()\n        capabilities.append(capability_name)\n\n    return capabilities\n\n# 呼叫函式\nobtain_capabilities()\n\n\n# 方法二\nimport requests\nfrom bs4 import BeautifulSoup\n\ndef obtain_capabilities():\n    capabilities = []\n\n    # 爬取T1588的資訊\n    url = \"https://attack.mitre.org/techniques/T1588/\"\n    response = requests.get(url)\n    soup = BeautifulSoup(response.text, \"html.parser\")\n    technique_description = soup.find(\"div\", class_=\"row technique-description\").find_all(\"p\")[1].text.strip()\n    capability_list = technique_description.split(\"，\")[:-1]\n\n    # 取得每種capability的描述\n    for capability in capability_list:\n        capability_name = capability.split(\"是\")[1].strip()\n        capabilities.append(capability_name)\n\n    return capabilities\n\n# 呼叫函式\nobtain_capabilities()\n\n\n# 方法三\nimport requests\nfrom bs4 import BeautifulSoup\n\ndef obtain_capabilities():\n    capabilities = []\n\n    # 爬取T1588的資訊\n    url = \"https://attack.mitre.org/techniques/T1588/\"\n    response = requests.get(url)\n    soup = BeautifulSoup(response.text, \"html.parser\")\n    technique_description = soup.select(\"#v-defense > div.expanded-row.expanded-5.row div.row div div div.content:nth-child(2) div p\")\n    technique_description = \"，\".join([desc.text.strip() for desc in technique_description])\n    capability_list = technique_description.split(\"，\")[:-1]\n\n    # 取得每種capability的描述\n    for capability in capability_list:\n        capability_name = capability.split(\"是\")[1].strip()\n        capabilities.append(capability_name)\n\n    return capabilities\n\n# 呼叫函式\nobtain_capabilities()\n```\n\n輸出：\n- 該技術名稱為 \"Obtain Capabilities\"，其內容為 Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n- 達成目標的方式有：\n  1. Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n  2. Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.\n  3. Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n  4. Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n  5. Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.\n  6. Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases."
      },
      "finish_reason":"stop"
    }
  ],
  "usage":{
    "prompt_tokens":1161,
    "completion_tokens":1218,
    "total_tokens":2379
  }
}